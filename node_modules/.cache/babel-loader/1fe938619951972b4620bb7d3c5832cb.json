{"ast":null,"code":"// Generated from src/grammars/Lulu.g4 by ANTLR 4.7.2\n// jshint ignore: start\nvar antlr4 = require('antlr4/index'); // This class defines a complete generic visitor for a parse tree produced by LuluParser.\n\n\nfunction LuluVisitor() {\n  antlr4.tree.ParseTreeVisitor.call(this);\n  return this;\n}\n\nLuluVisitor.prototype = Object.create(antlr4.tree.ParseTreeVisitor.prototype);\nLuluVisitor.prototype.constructor = LuluVisitor; // Visit a parse tree produced by LuluParser#program.\n\nLuluVisitor.prototype.visitProgram = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#const_val.\n\n\nLuluVisitor.prototype.visitConst_val = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#block.\n\n\nLuluVisitor.prototype.visitBlock = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#stmt.\n\n\nLuluVisitor.prototype.visitStmt = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#var_def.\n\n\nLuluVisitor.prototype.visitVar_def = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#var_val.\n\n\nLuluVisitor.prototype.visitVar_val = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#fst_dcl.\n\n\nLuluVisitor.prototype.visitFst_dcl = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#func_dcl.\n\n\nLuluVisitor.prototype.visitFunc_dcl = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#dcl_args.\n\n\nLuluVisitor.prototype.visitDcl_args = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#type_dcl.\n\n\nLuluVisitor.prototype.visitType_dcl = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#fst_def.\n\n\nLuluVisitor.prototype.visitFst_def = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#type_def.\n\n\nLuluVisitor.prototype.visitType_def = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#component.\n\n\nLuluVisitor.prototype.visitComponent = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#access_modifier.\n\n\nLuluVisitor.prototype.visitAccess_modifier = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#func_call.\n\n\nLuluVisitor.prototype.visitFunc_call = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#func_handler.\n\n\nLuluVisitor.prototype.visitFunc_handler = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#params.\n\n\nLuluVisitor.prototype.visitParams = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#func_def_args.\n\n\nLuluVisitor.prototype.visitFunc_def_args = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#func_def.\n\n\nLuluVisitor.prototype.visitFunc_def = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#cond_stmt.\n\n\nLuluVisitor.prototype.visitCond_stmt = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#switch_body.\n\n\nLuluVisitor.prototype.visitSwitch_body = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#loop_stmt.\n\n\nLuluVisitor.prototype.visitLoop_stmt = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#type.\n\n\nLuluVisitor.prototype.visitType = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#assign.\n\n\nLuluVisitor.prototype.visitAssign = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#variable.\n\n\nLuluVisitor.prototype.visitVariable = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#ref.\n\n\nLuluVisitor.prototype.visitRef = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#expr.\n\n\nLuluVisitor.prototype.visitExpr = function (ctx) {\n  return this.visitChildren(ctx);\n}; // Visit a parse tree produced by LuluParser#array.\n\n\nLuluVisitor.prototype.visitArray = function (ctx) {\n  return this.visitChildren(ctx);\n};\n\nexports.LuluVisitor = LuluVisitor;","map":{"version":3,"sources":["/Users/sedali/Desktop/temp/luluCmp/src/lib/LuluVisitor.js"],"names":["antlr4","require","LuluVisitor","tree","ParseTreeVisitor","call","prototype","Object","create","constructor","visitProgram","ctx","visitChildren","visitConst_val","visitBlock","visitStmt","visitVar_def","visitVar_val","visitFst_dcl","visitFunc_dcl","visitDcl_args","visitType_dcl","visitFst_def","visitType_def","visitComponent","visitAccess_modifier","visitFunc_call","visitFunc_handler","visitParams","visitFunc_def_args","visitFunc_def","visitCond_stmt","visitSwitch_body","visitLoop_stmt","visitType","visitAssign","visitVariable","visitRef","visitExpr","visitArray","exports"],"mappings":"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","sourcesContent":["// Generated from src/grammars/Lulu.g4 by ANTLR 4.7.2\n// jshint ignore: start\nvar antlr4 = require('antlr4/index');\n\n// This class defines a complete generic visitor for a parse tree produced by LuluParser.\n\nfunction LuluVisitor() {\n\tantlr4.tree.ParseTreeVisitor.call(this);\n\treturn this;\n}\n\nLuluVisitor.prototype = Object.create(antlr4.tree.ParseTreeVisitor.prototype);\nLuluVisitor.prototype.constructor = LuluVisitor;\n\n// Visit a parse tree produced by LuluParser#program.\nLuluVisitor.prototype.visitProgram = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#const_val.\nLuluVisitor.prototype.visitConst_val = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#block.\nLuluVisitor.prototype.visitBlock = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#stmt.\nLuluVisitor.prototype.visitStmt = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#var_def.\nLuluVisitor.prototype.visitVar_def = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#var_val.\nLuluVisitor.prototype.visitVar_val = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#fst_dcl.\nLuluVisitor.prototype.visitFst_dcl = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#func_dcl.\nLuluVisitor.prototype.visitFunc_dcl = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#dcl_args.\nLuluVisitor.prototype.visitDcl_args = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#type_dcl.\nLuluVisitor.prototype.visitType_dcl = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#fst_def.\nLuluVisitor.prototype.visitFst_def = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#type_def.\nLuluVisitor.prototype.visitType_def = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#component.\nLuluVisitor.prototype.visitComponent = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#access_modifier.\nLuluVisitor.prototype.visitAccess_modifier = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#func_call.\nLuluVisitor.prototype.visitFunc_call = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#func_handler.\nLuluVisitor.prototype.visitFunc_handler = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#params.\nLuluVisitor.prototype.visitParams = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#func_def_args.\nLuluVisitor.prototype.visitFunc_def_args = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#func_def.\nLuluVisitor.prototype.visitFunc_def = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#cond_stmt.\nLuluVisitor.prototype.visitCond_stmt = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#switch_body.\nLuluVisitor.prototype.visitSwitch_body = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#loop_stmt.\nLuluVisitor.prototype.visitLoop_stmt = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#type.\nLuluVisitor.prototype.visitType = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#assign.\nLuluVisitor.prototype.visitAssign = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#variable.\nLuluVisitor.prototype.visitVariable = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#ref.\nLuluVisitor.prototype.visitRef = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#expr.\nLuluVisitor.prototype.visitExpr = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n// Visit a parse tree produced by LuluParser#array.\nLuluVisitor.prototype.visitArray = function(ctx) {\n  return this.visitChildren(ctx);\n};\n\n\n\nexports.LuluVisitor = LuluVisitor;"]},"metadata":{},"sourceType":"module"}